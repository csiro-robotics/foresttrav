<launch>
  <arg name="robot" default="squash" />

  <arg name="output" default="screen" />
  <arg name="odom_stage" default="high" doc="The Wildcat output stage to use (high or tail)." />
  <arg name="respawn" default="true" />

  <arg name="run_feature_mapper" default="True" doc="Should the feature mapper be run?" />
  <arg name="run_ndt_te_estimation" default="True" doc="Should FTM traversability estimator be run?" />
  <arg name="run_reactive_lmp_planner" default="false" doc="Should tf_completion for colour pipeline" />
  
  <!-- Colour Perception -->
  <arg name="run_colour_fusion" default="false" doc="Should colour_fusion be run?" />

  <!-- Squash -->
  <arg if="$(eval arg('robot') == 'squash')" name="pack" default="p5" />
  <arg if="$(eval arg('robot') == 'squash')" name="platform" default="squash" />
  <arg if="$(eval arg('robot') == 'squash')" name="robot_name" default="r6" />
  <arg if="$(eval arg('robot') == 'squash')" name="self_strike" default="squash" />

  <arg name="ROSCONSOLE_FORMAT" default="${severity} ${time} ${node}: ${message}" />
  <env name="ROSCONSOLE_FORMAT" value="$(arg ROSCONSOLE_FORMAT)" />

  <group ns="$(arg robot_name)">
    <remap from="/tf" to="tf" />
    <remap from="/tf_static" to="tf_static" />

    <!-- Loading all parameters -->
    <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_ftm_navigation.yaml" />

    <!-- <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_ohm_mapping.yaml" />
    <node name="ohm_mapping" pkg="ohm_mapping_node" type="ohm_mapping_node" respawn="$(arg respawn)">
      <remap from="slam/odom/high/cloud" to="slam/odom/$(arg odom_stage)/cloud" />
    </node> -->

    <!-- <rosparam ns="behaviour_compositor" command="load" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_behaviour_compositor.yaml" />
    <node name="behaviour_compositor" pkg="behaviour_compositor" type="behaviour_compositor_node" respawn="$(arg respawn)">
      <remap from="slam/odom/high/pose" to="slam/odom/$(arg odom_stage)/pose" />
    </node> -->

    <group if="$(arg run_feature_mapper)">
      <node pkg="ftm_ros" type="feature_mapper_node" name="feature_mapper_node" clear_params="true" output="$(arg output)" >
        <remap from="ohm_cloud_in" to="ohm" />
      </node>
    </group>

    <!-- FTM pipline using a SVC -->
    <group if="$(arg run_ndt_te_estimation)">
      <node pkg="ndt_ftm_py" type="ndt_ftm_te.py" name="ndt_ftm_te" clear_params="true" output="$(arg output)">
        <remap from="feature_cloud_in" to="/r6/feature_mapper_node/feature_cloud" />
        <remap from="cloud_out" to="te_estimation" />
      </node>
    </group>
<!-- 
    <group if="$(arg run_reactive_lmp_planner)">
      <node pkg="ground_estimation" type="ground_estimator_node" name="ground_estimator_node" clear_params="true" output="screen">
        <param name="ohm_cloud_topic" value="/r6/ohm" />
        <param name="te_cloud_topic" value="/r6/tep_cloud_out" />
      </node>

      <node pkg="nve_rlp" type="nve_rlp_node" name="nve_rlp_node" clear_params="true" output="screen">
        <rosparam command="load" file="$(find nve_rlp)/config/nve_rlp.yaml" />
        
        <remap from="/move_base_simple/goal" to="/goal" />
        <remap from="/r6/ground_estimator_node/te_costmap" to="/$(arg robot_name)/ground_estimator_node/te_costmap" />
        <remap from="/$(arg robot_name)/nve_rlp_node/path" to="/test"/>
        
      </node> -->
      
      
    <!-- </group> -->
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_map_odom_broadcaster" args="1 0 0 0 0 0 1 odom map" />

  </group>

</launch>
