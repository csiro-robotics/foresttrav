<launch>
  <arg name="robot" default="squash" />

  <arg name="output" default="screen" />
  <arg name="odom_stage" default="high" doc="The Wildcat output stage to use (high or tail)." />

  <arg name="run_ohm_mapping" default="false" doc="Should ohm_mapping be run?" />
  <arg name="run_feature_mapper" default="true" doc="Should ohm_mapping be run?" />
  <arg name="run_ndt_te_estimation" default="false" doc="Should ohm_mapping be run?" />
  <arg name="run_tf_for_colour" default="false" doc="Should tf_completion for colour pipeline" />
  <arg name="run_reactive_lmp_planner" default="false" doc="Should tf_completion for colour pipeline" />
  
  <!-- Colour Perception -->
  <arg name="run_colour_fusion" default="false" doc="Should colour_fusion be run?" />

  <!-- Squash -->
  <arg if="$(eval arg('robot') == 'squash')" name="pack" default="p5" />
  <arg if="$(eval arg('robot') == 'squash')" name="platform" default="squash" />
  <arg if="$(eval arg('robot') == 'squash')" name="robot_name" default="r6" />
  <arg if="$(eval arg('robot') == 'squash')" name="self_strike" default="squash" />

  <arg name="ROSCONSOLE_FORMAT" default="${severity} ${time} ${node}: ${message}" />
  <env name="ROSCONSOLE_FORMAT" value="$(arg ROSCONSOLE_FORMAT)" />

  <group ns="$(arg robot_name)">
    <remap from="/tf" to="tf" />
    <remap from="/tf_static" to="tf_static" />

    <group if="$(arg run_ohm_mapping)">
      <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_ohm_mapping.yaml" />
      <node name="ohm_mapping" pkg="ohm_mapping_node" type="ohm_mapping_node" respawn="$(arg respawn)" output="$(arg output)">
        <remap from="slam/odom/high/cloud" to="slam/odom/$(arg odom_stage)/cloud" />
      </node>
    </group>

    <group if="$(arg run_feature_mapper)">
      <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_feature_mapper.yaml" />
      <node pkg="ftm_ros" type="feature_mapper_node" name="feature_mapper_node" clear_params="true" output="$(arg output)">
        <remap from="ohm_cloud_in" to="ohm" />
      </node>
    </group>


    <!-- FTM pipline using a SVC -->
    <group if="$(arg run_ndt_te_estimation)">
      <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_ndt_ftm.yaml" />
      <node pkg="ndt_ftm_py" type="ndt_ftm_te.py" name="ndt_ftm_te" clear_params="true" output="$(arg output)">
        <remap from="feature_cloud_in" to="/r6/feature_mapper_node/feature_cloud" />
        <remap from="cloud_out" to="te_estimation_cloud" />
      </node>
    </group>

    <group if="$(arg run_ndt_te_estimation)">
      <node pkg="ground_estimation" type="ground_estimator_node" name="ground_estimator_node" clear_params="true" output="screen">
        <param name="ohm_cloud_topic" value="/r6/ohm" />
        <param name="te_cloud_topic" value="/r6/tep_cloud_out" />
        <rosparam param="local_map_bounds">
        - -10
        - -10
        - -1.5
        - 10
        - 10
        - 0.5
      </rosparam>
      </node>
    </group>

    <group if="$(arg run_reactive_lmp_planner)">
      <rosparam command="load" subst_value="true" file="$(find nve_startup)/config/$(arg platform)/$(arg platform)_feature_mapper.yaml" />
      <node pkg="ftm_ros" type="feature_mapper_node" name="feature_mapper_node" clear_params="true" output="$(arg output)">
        <remap from="ohm_cloud_in" to="ohm" />

      </node>
    </group>


    <group if="$(arg run_colour_fusion)">
      <node pkg="ohm_colour_fuser" type="ohm_colour_fuser_node" name="ohm_colour_fuser" clear_params="true">
        <rosparam command="load" file="$(find nve_startup)/config/ohm_colour_fuser.yaml" />
        <remap from="~rgb_cloud_in" to="/ohm_offline_colour_fuser_node/colour_cloud" />
        <remap from="~rgb_cloud_compressed_in" to="/r6/coloured_points" />
      </node>
    </group>


    <group if="$(arg run_tf_for_colour)">
      <!-- <node name="rsbs_sbs_tf" pkg="tf2_ros" type="static_transform_publisher" respawn="$(arg respawn)" output="$(arg output)" args="0 0 0 0 0 0 1 $(arg robot_name)/slam_base_link slam_base_link" /> -->
      <node name="odom_sbl_tf" pkg="tf2_ros" type="static_transform_publisher" respawn="$(arg respawn)" output="$(arg output)" args="0 0 0 0 0 0 1  odom slam_base_link" />
      <node name="slam_bl_bl_tf" pkg="tf2_ros" type="static_transform_publisher" respawn="$(arg respawn)" output="$(arg output)" args="0 0 0 0 0 0 1  slam_base_link base_link" />
      <node name="bl_gl_tf" pkg="tf2_ros" type="static_transform_publisher" respawn="$(arg respawn)" output="$(arg output)" args="0 0 -1.0 0 0 0 1 base_link ground_link" />
    </group>
    <!-- <node name="rviz" pkg="rviz" type="rviz" respawn="$(arg respawn)" output="$(arg output)" /> -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" respawn="$(arg respawn)" output="$(arg output)" args="-d $(find nve_startup)/config/wildcat_odom.rviz" /> -->
  </group>

</launch>